===================================

A text file containing test for edge cases in matrix


================
Import function
================

>>> matrix_divided = __import__("2-matrix_divided").matrix_divided

======
TESTS
======

>>> matrix = [[1,2,3], [4,5,6], [7,8,9]]
>>> matrix_divided(matrix, 2)
[[0.5,1.0,1.5], [2.0,2.5,3.0], [3.5,4.0,4.5]]

>>> matrix = [1,2,3], [4,5,6]]
>>> matrix_divided(matrix, 2)
[[0.5,1.0,1.5], [2.0,2.5,3.0]]

>>> matrix = [[1,2,3], [4,5,6], [7,8,9]]
>>> matrix_divided(matrix, 0)
Traceback (most recent call last):
...
ZeroDivisionError: division by zero

    # Test case with matrix containing a non-list element
    matrix = [[1, 2, 3], [4, 5, 6], 7]
    div = 2
    try:
        matrix_divided(matrix, div)
    except TypeError as e:
        assert str(e) == "matrix must be a matrix (list of lists) of integers/floats"

    # Test case with matrix containing a non-integer/float element
    matrix = [[1, 2, 3], [4, "5", 6], [7, 8, 9]]
    div = 2
    try:
        matrix_divided(matrix, div)
    except TypeError as e:
        assert str(e) == "matrix must be a matrix (list of lists) of integers/floats"

    # Test case with matrix containing rows of different sizes
    matrix = [[1, 2, 3], [4, 5], [6, 7, 8]]
    div = 2
    try:
        matrix_divided(matrix, div)
    except TypeError as e:
        assert str(e) == "Each row of the matrix must have the same size"

test_matrix_divided_validation()

